game.module(    'game.objects.car').require(    'game.objects.tileData').body(function(){        Car = game.Class.extend({                init: function(options) {                        this.sprite = new game.Sprite(options.imageName, 0, 0, {anchor: {x: 0.5, y: 0.0}});                        game.scene.map.container.addChild(this.sprite);                        game.scene.addObject(this);                        this.direction = this.lastDirection = TileData.DIRECTIONS.up;        },                rotateToDirection: function(direction) {                        this.lastDirection = this.direction;                        this.direction = direction;                        var dir = TileData.DIRECTIONS[this.direction];                        this.sprite.rotation = (Math.PI * this.sprite.width / 4.0) * dir;        },                isCloseEnoughToTile: function(tileData) {                        return game.Math.distance(                    tileData.position.x, tileData.position.y,                    this.sprite.position.x, this.sprite.position.y) < (Map.TILE_HALF_WIDTH / 2.0);        },                chooseNextDirection: function(tileData) {                        if (tileData.allowedDirections.indexOf(this.direction) < 0) {                                var newDirection = null;                                if (tileData.allowedDirections.indexOf(this.lastDirection) >= 0) {                                        newDirection = this.lastDirection;                }                else {                    _.each(tileData.allowedDirections, function(tileDirection) {                        if (!newDirection) {                            if (Math.abs(TileData.DIRECTIONS[this.direction] - TileData.DIRECTIONS[tileDirection]) != 2) {                                newDirection = tileDirection;                            }                        }                    }, this);                }                                this.rotateToDirection(newDirection);                                this.sprite.position = _.clone(tileData.position);            }        },                update: function() {                        var tileData = game.scene.map.tileForPosition(this.sprite.position);                        if (this.isCloseEnoughToTile(tileData)) {                                this.chooseNextDirection(tileData);                  }                        var displacement = Car.VELOCITY * game.system.delta;                        if ((this.direction == 'up') || (this.direction == 'left')) {                displacement *= -1;             }                        if ((this.direction == 'up') || (this.direction == 'down')) {                this.sprite.position.y += displacement;            }            else {                this.sprite.position.x += displacement;            }        }    });        _.extend(Car,        {           VELOCITY: 300         });});